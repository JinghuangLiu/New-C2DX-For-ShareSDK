/* DO NOT EDIT THIS FILE - it is machine generated */
#include "AppDelegate.h"
#include "cocos2d.h"

#if COCOS2D_VERSION >= 0x00030000
#include "base/CCEventType.h"
#else
#include "CCEventType.h"
#endif

#include "platform/android/jni/JniHelper.h"
#include <jni.h>
#include <android/log.h>
#include "C2DXShareSDKTypeDef.h"
#include "CCJSONConverter.h"

USING_NS_CC;
using namespace cn::sharesdk;

/* Header for class ShareSDKUtils */
#ifndef _Included_ShareSDKUtils
#define _Included_ShareSDKUtils
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     aaa_bbb_Main
 * Method:    onJavaCallback
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_cn_sharesdk_ShareSDKUtils_onJavaCallback
  (JNIEnv * env, jclass thiz, jstring resp);

void callBackComplete(int reqID, int action, int platformId, __Dictionary* res);

void callBackError(int reqID, int action, int platformId, __Dictionary* res);

void callBackCancel(int reqID, int action, int platformId, __Dictionary* res);

bool getMethod(JniMethodInfo &mi, const char *methodName, const char *paramCode);

void releaseMethod(JniMethodInfo &mi);

bool rigisterAppAndSetPlatformConfig(const char* appKey, __Dictionary *platformInfos);

bool authorize(int reqID, int platformId, C2DXAuthResultEvent callback);

bool cancelAuthorize(int platformId);

bool isAuthorizedValid(int platformId);

bool isClientValid(int platformId);

bool getUserInfo(int reqID, int platformId, C2DXGetUserInfoResultEvent callback);

bool addFriend(int reqID, int platformId, const char* account, C2DXAddFriendResultEvent callback);

__Dictionary* getAuthInfo(int platformId);

bool shareContent(int reqID, __Array *platTypes, __Dictionary *content, C2DXShareResultEvent callback);

bool getFriendList(int reqID, int platformId, int count, int page, C2DXGetFriendsResultEvent callback);

bool onekeyShare(int reqID, int platformId, __Dictionary *content, C2DXShareResultEvent callback);

void toastShow(const char* msg);


#ifdef __cplusplus
}
#endif
#endif
